<application>
  <component name="AppStorage">
    <option name="newTranslationDialogHeight" value="256" />
    <option name="newTranslationDialogWidth" value="562" />
    <option name="newTranslationDialogX" value="728" />
    <option name="newTranslationDialogY" value="358" />
    <option name="pinTranslationDialog" value="true" />
    <histories>
      <item value="before Invocation" />
      <item value="MINUTES" />
      <item value="MAX SAFE EVENT AGE" />
      <item value="idle Times" />
      <item value="queued" />
      <item value="millis" />
      <item value="No eventType type in attributes or eventType type is not a String" />
      <item value="The resource pack allowance has been exhausted, please check your resource pack" />
      <item value="number" />
      <item value="接口呼保存的用户自定义字段" />
      <item value="get Local Address" />
      <item value="is Get Charset From Content" />
      <item value="之前" />
      <item value="set If Absent" />
      <item value="CHANUNAVAIL" />
      <item value="INUSE" />
      <item value="UNAVAILABLE" />
      <item value="hint" />
      <item value="Bridge Exec Event" />
      <item value="A BridgeEvent is triggered when a link between two voice channels is established (&quot;Link&quot;) or discontinued (&quot;Unlink&quot;). As of Asterisk 1.6 the Bridge event is reported directly by Asterisk. Asterisk versions up to 1.4 report individual events: LinkEvent and UnlinkEvent.For maximum compatibily do not use the Link and Unlink events in your code. Just use the Bridge event and check for isLink() and isUnlink(). It is implemented in channel.c" />
      <item value="manner" />
      <item value="originate" />
      <item value="try to reconnect quite fast for the firt 10 times this succeeds if the server has just been restarted" />
      <item value="now the DisconnectEvent is dispatched to registered eventListeners (clients) and after that the ManagerReaderThread is gone. So effectively we replaced the reader thread by a ReconnectThread." />
      <item value="close socket if still open and remove reference to readerThread After sending the DisconnectThread that thread will die anyway." />
      <item value="cleanup Action Listeners" />
      <item value="ResponseEvent without internalActionId: this happens if the same event class is used as response event and as an event that is not triggered by a Manager command Example: QueueMemberStatusEvent. logger.debug(&quot;ResponseEvent without &quot; + &quot;internalActionId:\n&quot; + responseEvent);" />
      <item value="if this turns out to be slow, we could consider caching the" />
      <item value="dispatch Legacy Event If Needed" />
      <item value="Some events need special treatment besides forwarding them to the registered eventListeners (clients) These events are handled here at first:" />
      <item value="fire Event" />
      <item value="received the news" />
      <item value="file" />
      <item value="Please file a bug." />
      <item value="caller Id Num" />
      <item value="you should expect problems to follow." />
      <item value="follow" />
      <item value="&quot;Unable to determine asterisk version, assuming" />
      <item value="identifier" />
      <item value="protocol" />
      <item value="Got asterisk protocol identifier version" />
      <item value="Lockable List" />
      <item value="agent Logout" />
      <item value="AGENT LOGGIN PREFIX" />
      <item value="plaintext" />
      <item value="modified Content Before Push" />
      <item value="dest Alias" />
      <item value="retrofit Content" />
      <item value="first time this request being called, so perform security checking" />
      <item value="Access failed, permission exception" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="497" />
        <entry key="ENGLISH" value="497" />
        <entry key="FRENCH" value="1" />
        <entry key="HAITIAN_CREOLE" value="1" />
        <entry key="LATIN" value="2" />
        <entry key="LATVIAN" value="1" />
        <entry key="LUXEMBOURGISH" value="1" />
        <entry key="SCOTS_GAELIC" value="1" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1663910957148" />
  </component>
  <component name="Settings">
    <option name="showReplacementActionInContextMenu" value="true" />
    <option name="translateDocumentation" value="true" />
  </component>
  <component name="Translation.Cache">
    <option name="lastTrimTime" value="1673254542035" />
  </component>
  <component name="Translation.States">
    <option name="newTranslationDialogWidth" value="592" />
    <option name="newTranslationDialogX" value="815" />
    <option name="newTranslationDialogY" value="450" />
    <histories>
      <item value="Converts a path string, or a sequence of strings that when joined form a path string, to a Path. If more does not specify any elements then the value of the first parameter is the path string to convert. If more specifies one or more elements then each non-empty string, including first, is considered to be a sequence of name elements (see Path) and is joined to form a path string. The details as to how the Strings are joined is provider specific but typically they will be joined using the name-separator as the separator. For example, if the name separator is &quot;&quot; and getPath(&quot;foo&quot;,&quot;bar&quot;,&quot;gus&quot;) is invoked, then the path string &quot;foobargus&quot; is converted to a Path. A Path representing an empty path is returned if first is the empty string and more does not contain any non-empty strings. The Path is obtained by invoking the getPath method of the default FileSystem. Note that while this method is very convenient, using it will imply an assumed reference to the default FileSystem and limit the utility of the calling code. Hence it should not be used in library code intended for flexible reuse. A more flexible alternative is to use an existing Path instance as an anchor, such as: Path dir = ... Path path = dir.resolve(&quot;file&quot;); Params: first – the path string or initial part of the path string more – additional strings to be joined to form the path string Returns: the resulting Path Throws: InvalidPathException – if the path string cannot be converted to a Path See Also: FileSystem.getPath" />
      <item value="Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5f9cf030] JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@96a1bf8] will be managed by Spring" />
      <item value="Error: Please specify npm scripts to run" />
      <item value="period" />
      <item value="initial Delay" />
      <item value="schedule At Fixed Rate" />
      <item value="An object reference that may be updated atomically. See the java.util.concurrent.atomic package specification for description of the properties of atomic variables." />
      <item value="Set to true for fast origination. Only with fast origination Asterisk will send OriginateSuccess- and OriginateFailureEvents." />
      <item value="Sends a ManagerAction to the Asterisk server and waits for the corresponding ManagerResponse. Params: action – the action to send to the Asterisk server timeout – milliseconds to wait for the response before throwing a TimeoutException Returns: the corresponding response received from the Asterisk server Throws: IOException – if the network connection is disrupted. TimeoutException – if no response is received within the given timeout period. IllegalArgumentException – if the action is null. IllegalStateException – if you are not connected to an Asterisk server. See Also: sendAction(ManagerAction, SendActionCallback)" />
      <item value="Returns a function that always returns its input argument. Type parameters: &lt;T&gt; – the type of the input and output objects to the function Returns: a function that always returns its input argument" />
      <item value="eturn the address on which the request was received." />
      <item value="Return the address of the remote client." />
      <item value="data" />
      <item value="谷歌翻译" />
      <item value="ge" />
      <item value="可以" />
      <item value="Whether all the entries inside the cache(s) are removed. By default, only the value under the associated key is removed. Note that setting this parameter to true and specifying a key is not allowed." />
      <item value="redundant" />
      <item value="redun" />
      <item value="red" />
      <item value="re" />
      <item value="get End Of Always Push" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="26" />
        <entry key="ENGLISH" value="27" />
      </map>
    </option>
  </component>
</application>